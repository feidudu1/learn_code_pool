import torch

a = torch.rand(2, 3)
b = torch.rand(1, 3)
c = torch.rand(3)
# a, 2*3
# b, 1*3
# c, 1*3
d = a + b
# 2*3
f = a + c
print(a)
# tensor([[0.2864, 0.6915, 0.1746],
#         [0.5154, 0.9481, 0.0057]])
print(b)
# tensor([[0.1050, 0.1658, 0.7078]])
print(c)
# tensor([0.4679, 0.9067, 0.4032])  只有一个【
print(d)
# tensor([[0.3914, 0.8573, 0.8824],
#         [0.6204, 1.1139, 0.7135]])
print(f)
# tensor([[0.7543, 1.5982, 0.5778],
#         [0.9833, 1.8548, 0.4089]])
print(d.shape)


a = torch.rand(2, 3)
b = torch.rand(2)
# a, 2*3
# b, 1*2
c = a + b
# 会报错


# 为1的时候也是可以的
a = torch.rand(2, 1)
b = torch.rand(2)
print(a)
# tensor([[0.9262],
#         [0.5597]])
# a, 2*1
# b, 1*2
c = a + b
# 2*2



x = torch.rand(2, 1, 1)
y = torch.rand(3)
print(x)
# tensor([ [[0.1813]],
#          [[0.7059]] ])
print(y)
# tensor([0.3163, 0.7194, 0.3937])
print(x + y)

# 有n个参数就有n个【
x = torch.rand(2, 1, 1, 3)
# tensor([ 
  #        [
  #          [[0.8945, 0.4808, 0.4891]]
  #                                   ],
  #        [
  #         [[0.4493, 0.5106, 0.6240]]
  #                                   ] 
  #     ])

# 生成4个 2行3列的数组
y = torch.rand(4, 2, 3)
# tensor([[[0.3197, 0.7275, 0.1494],
#          [0.9274, 0.2822, 0.9829]],
        
#         [[0.9800, 0.1286, 0.9457],
#          [0.7940, 0.3485, 0.3283]],
        
#         [[0.6137, 0.8659, 0.7937],
#          [0.1403, 0.6854, 0.0581]],
        
#         [[0.3269, 0.6779, 0.3487],
#          [0.0185, 0.1676, 0.4929]]])
print(x)
print(x.shape)
print(y)
print(x + y)
# tensor([[[[1.2142, 1.2083, 0.6385],
#           [1.8219, 0.7630, 1.4720]],

#          [[1.8745, 0.6094, 1.4348],
#           [1.6885, 0.8293, 0.8175]],

#          [[1.5081, 1.3467, 1.2828],
#           [1.0348, 1.1662, 0.5472]],

#          [[1.2213, 1.1587, 0.8378],
#           [0.9130, 0.6484, 0.9820]]],


#         [[[0.7691, 1.2381, 0.7734],
#           [1.3767, 0.7928, 1.6068]],

#          [[1.4294, 0.6392, 1.5697],
#           [1.2433, 0.8591, 0.9523]],

#          [[1.0630, 1.3765, 1.4177],
#           [0.5896, 1.1960, 0.6821]],

#          [[0.7762, 1.1885, 0.9727],
#           [0.4678, 0.6782, 1.1169]]]])
# 2 * 4 * 2 * 3
